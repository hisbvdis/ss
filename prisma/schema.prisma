datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ===========================================================================
// OBJECTS
// ===========================================================================
model object {
  id                   Int                 @id @default(autoincrement())
  type                 String?
  name_full            String?
  name_where           String?
  name_type            String?
  status_inherit       Boolean?
  status               String?
  status_comment       String?
  status_confirm       String?
  status_instead_id    Int?
  city_id              Int?
  parent_id            Int?
  address              String?
  address_2            String?
  coord_inherit        Boolean?
  coord_lat            Float?
  coord_lon            Float?
  description          String?
  schedule_inherit     Boolean?
  schedule_247         Boolean?
  schedule_date        DateTime?
  schedule_source      String?
  schedule_comment     String?
  created              DateTime?
  modified             DateTime?
  // --------------------------
  photos               object_photo[]      @relation("object_photo")
  links                object_link[]       @relation("object_link")
  phones               object_phone[]      @relation("object_phone")
  schedule             object_schedule[]   @relation("object_schedule")
  sections             object_on_section[] @relation("object_section")
  options              object_on_option[]  @relation("object_option")
  // --------------------------
  statusInstead        object?             @relation("status_instead", fields: [status_instead_id], references: [id])
  statusInsteadRelated object[]            @relation("status_instead")
  city                 city?               @relation("city", fields: [city_id], references: [id])
  parent               object?             @relation("parent", fields: [parent_id], references: [id])
  children             object[]            @relation("parent")
}

// ===========================================================================
// OBJECT CATEGORIES
// ===========================================================================
model option {
  id      Int                @id @default(autoincrement())
  name    String
  spec_id Int?
  spec    spec?              @relation("option_spec", fields: [spec_id], references: [id], onDelete: Cascade)
  objects object_on_option[] @relation("object_option")
}

model spec {
  id           Int               @id @default(autoincrement())
  name_service String
  name_filter  String
  object_type  String
  control_type String
  options      option[]          @relation("option_spec")
  sections     section_on_spec[] @relation("section_spec")
}

model section {
  id          Int                 @id @default(autoincrement())
  name        String              @unique
  object_type String
  specs       section_on_spec[]   @relation("section_spec")
  objects     object_on_section[] @relation("object_section")
}

// ===========================================================================
// MATCHING TABLES
// ===========================================================================
model object_link {
  id        Int     @id @default(autoincrement())
  object_id Int
  order     Int
  value     String
  comment   String?
  object    object  @relation("object_link", fields: [object_id], references: [id], onDelete: Cascade)
  @@unique([object_id, order])
}

model object_phone {
  id        Int     @id @default(autoincrement())
  object_id Int
  order     Int
  value     String
  comment   String?
  object    object  @relation("object_phone", fields: [object_id], references: [id], onDelete: Cascade)
  @@unique([object_id, order])
}

model object_schedule {
  id        Int    @id @default(autoincrement())
  object_id Int
  day_num   Int
  time      String?
  from      Int?
  to        Int?
  object    object @relation("object_schedule", fields: [object_id], references: [id], onDelete: Cascade)
  @@unique([object_id, day_num])
}

model object_photo {
  id        Int      @id @default(autoincrement())
  object_id Int
  name      String
  order     Int
  uploaded  DateTime
  object    object   @relation("object_photo", fields: [object_id], references: [id], onDelete: Cascade)
}

model object_on_section {
  id         Int     @id @default(autoincrement())
  object_id  Int
  section_id Int
  object     object  @relation("object_section", fields: [object_id], references: [id], onDelete: Cascade)
  section    section @relation("object_section", fields: [section_id], references: [id], onDelete: Restrict)
}

model object_on_option {
  id        Int    @id @default(autoincrement())
  object_id Int
  option_id Int
  object    object @relation("object_option", fields: [object_id], references: [id], onDelete: Cascade)
  option    option @relation("object_option", fields: [option_id], references: [id], onDelete: Restrict)
}

model section_on_spec {
  id         Int     @id @default(autoincrement())
  section_id Int
  spec_id    Int
  section    section @relation("section_spec", fields: [section_id], references: [id], onDelete: Cascade)
  spec       spec    @relation("section_spec", fields: [spec_id], references: [id], onDelete: Restrict)
}

// ===========================================================================
// CITIES
// ===========================================================================
model city {
  id               Int      @id
  name             String?
  name_preposition String?
  admin1_name      String?
  admin2_name      String?
  coord_lat        Float
  coord_lon        Float
  country_name     String?
  objects          object[] @relation("city")
}